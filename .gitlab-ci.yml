stages:
  - deploy
  - publish 
  
deploy_dev:
    before_script:
      - sleep 10
      - ip a
      - sudo chmod 777 -R /home/gitlab-runner/
      - whoami
      - pwd
      - sudo chmod 777 -R /home/gitlab-runner/ 
      - sudo npm cache clean --force

    variables:
      GIT_STRATEGY: clone
    stage: deploy
    script:
      - whoami
      - pwd
      - sudo systemctl restart nginx
      - echo "Deploy to development server" 
      - sudo npm install
      - grep home package.json || true
      - export CI=false
      - export NODE_OPTIONS=--max_old_space_size=8196
      - export REACT_APP_UI_ENV=DEV
      - sudo -E bash -c "set \"CI=false\" &&  npm run build"
      - sudo rm -rf /home/ubuntu/build/
      - sudo cp -r build/ /home/ubuntu/
      - forever stop erp || true
      - forever start --uid "erp" -a -l forever.log -o out.log -e err.log $(which serve) -s /home/ubuntu/build -l 3000 
      # - sonar-scanner   -Dsonar.projectKey=ERP-Revamp-User-Frontend   -Dsonar.sources=.   -Dsonar.host.url=http://3.6.23.199:9000   -Dsonar.login=40cf8e68959fee394596fa649b681f0f5875aef9 > sonar.log
      # - cat sonar.log | grep -i browse
      - sudo service uwsgi start
    environment:
      name: dev
      url: 
    tags:
      - erp_revamp_frontend
    only:
      - dev

deploy_qa:
    before_script:
      - sleep 10
      - ip a
      - sudo chmod 777 -R /home/gitlab-runner/
      - whoami
      - pwd
      - sudo chmod 777 -R /home/gitlab-runner/ 

    variables:
      GIT_STRATEGY: clone
    stage: deploy
    script:
      - whoami
      - pwd
      - sudo systemctl restart nginx
     # - sudo service uwsgi stop
      - echo "Deploy to QA server"
      - sudo npm install
      - export REACT_APP_UI_ENV=QA
      - grep home package.json || true
      - export CI=false
      - export NODE_OPTIONS=--max_old_space_size=8196
      - sudo -E bash -c "set \"CI=false\" &&  npm run build"
      - sudo rm -rf /home/ubuntu/build_qa/
      - sudo cp -r build/ /home/ubuntu/build_qa
      - forever stop qa || true
      - forever start --uid "qa" -a -l forever.log -o out.log -e err.log $(which serve) -s /home/ubuntu/build_qa -l 9004
     # - sudo service uwsgi start
#      - sonar-scanner   -Dsonar.projectKey=ERP-Revamp-User-Frontend   -Dsonar.sources=.   -Dsonar.host.url=http://3.6.23.199:9000   -Dsonar.login=40cf8e68959fee394596fa649b681f0f5875aef9 > sonar.log
#      - cat sonar.log | grep -i browse
    environment:
      name: qa
      url: 
    tags:
      - qa-erp-frontend
    only:
      - qa


code_analysis:
  stage: deploy
  script:
    - whoami
    - npm audit
    - sonar-scanner  -Dsonar.projectKey=ERP_Revamp_Frontend -Dsonar.sources=. -Dsonar.host.url=http://3.6.23.199:9000 -Dsonar.login=fb5624bf10aad99b5fa4af1397b9fd1c1e62a19c
  environment:
    name: development
    url:
  tags:
    - erp_revamp_frontend
  only:
    - qa


deploy_stage:
    before_script:
      - sleep 10
      - ip a
      - whoami
      - pwd
      - sudo chmod 777 -R $PWD
     # - sudo npm cache clean --force
     # - sudo npm install -g serve
     # - sudo npm install -g forever
    variables:
      GIT_STRATEGY: clone
    stage: deploy
    script:
      - whoami
      - pwd
      # - sudo service uwsgi stop
      - sudo systemctl restart nginx
      - echo "Deploy to development server"
      - sudo npm install
      - grep home package.json || true
      - export CI=false
      - export NODE_OPTIONS=--max_old_space_size=8096
      - export REACT_APP_UI_ENV=STAGE
      - sudo service uwsgi restart
      - sudo -E bash -c "set \"CI=false\" &&  npm run build"
      # - sudo service uwsgi start
      - sudo rm -rf /home/ubuntu/build_test | true
      - sudo cp -r build/ /home/ubuntu/build_test
      - sudo chown -R gitlab-runner:gitlab-runner /home/gitlab-runner/builds/
      - forever stop blue || true
      - forever start -v --uid "blue" -a -l /var/log/frontend/forever.log -o /var/log/frontend/out_test.log -e /var/log/frontend/err_test.log $(which serve) -s /home/ubuntu/build_test/ -l 4000 
      # - aws s3 rm s3://erp-revamp-central/auto_scaling/build --recursive
      # - aws s3 sync /home/ubuntu/build s3://erp-revamp-central/auto_scaling/build/
    environment:
      name: stage
      url: 
    tags:
      - erp-stage-fe
    only:
      - stage

deploy_stage_gcp:
    before_script:
      - sleep 10
      - ip a
      - whoami
      - pwd
      - sudo chmod 777 -R $PWD
    variables:
      GIT_STRATEGY: clone
    stage: deploy
    script:
      - whoami
      - pwd
      - sudo systemctl restart nginx
      - echo "Deploy to stage server"
      - sudo npm install
      - grep home package.json || true
      - export CI=false
      - export NODE_OPTIONS=--max_old_space_size=8096
      - export REACT_APP_UI_ENV=STAGE
      - sudo service uwsgi restart
      - sudo -E bash -c "set \"CI=false\" &&  npm run build"
      - sudo rm -rf /home/ubuntu/build_test | true
      - sudo cp -r build/ /home/ubuntu/build_test
      - sudo chown -R gitlab-runner:gitlab-runner /home/gitlab-runner/builds/
      - forever stop erp-frontend-stage || true
      - forever start -v --uid "erp-frontend-stage" -a -l /var/log/frontend/forever.log -o /var/log/frontend/out_test.log -e /var/log/frontend/err_test.log $(which serve) -s /home/ubuntu/build_test/ -l 4000 
      - sudo gsutil rm -r gs://erp-academic-stage/mig-config/build
      - sudo gsutil rsync -r /home/ubuntu/build_test gs://erp-academic-stage/mig-config/build/
    environment:
      name: stage
      url: 
    tags:
      - erp-stage-fe-gcp
    only:
      - stage-gcp

deploy_prod:
    before_script:
      - sleep 10
      - ip a
      - sudo service uwsgi stop
      - sudo chmod 777 -R /home/gitlab-runner/
      - whoami
      - pwd
      - sudo chmod 777 -R /home/gitlab-runner/ 
      # - sudo npm cache clean --force
      # - sudo npm install -g serve
      # - sudo npm install -g forever
    variables:
      GIT_STRATEGY: clone
    stage: deploy
    script:
      - whoami
      - pwd
      - sudo systemctl restart nginx
      - echo "Deploy to development server"
      - sudo npm install
      - grep home package.json || true
      - export CI=false
      - export NODE_OPTIONS=--max_old_space_size=8196
      - export REACT_APP_UI_ENV=PROD
      - sudo -E bash -c "set \"CI=false\" &&  npm run build"
      - sudo rm -rf /home/ubuntu/build/
      - sudo cp -r build/ /home/ubuntu/build
      - forever stop erp || true
      - forever start -v --uid "erp" -a -l /var/log/frontend/forever.log -o /var/log/frontend/out.log -e /var/log/frontend/err.log $(which serve) -s /home/ubuntu/build -l 3000
      - sudo service uwsgi start
      - aws s3 rm s3://erp-revamp-central/auto_scaling/build --recursive
      - aws s3 sync /home/ubuntu/build s3://erp-revamp-central/auto_scaling/build/
    environment:
      name: production
      url: 
    tags:
      - erp_revamp_frontend-prod
    only:
      - master

deploy_preprod_gcp:
    before_script:
      - sleep 10
      - ip a
      - sudo chmod 777 -R /home/gitlab-runner/builds/
      - whoami
      - pwd
    variables:
      GIT_STRATEGY: clone
    stage: deploy
    script:
      - whoami
      - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash && export NVM_DIR="$HOME/.nvm" [ -s "$NVM_DIR/nvm.sh" ] &&"$NVM_DIR/nvm.sh" [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
      - nvm install 14.21.3
      - pwd
      #- sudo systemctl restart nginx
      - echo "Deploy to pre-production server"
      - npm install
      - grep home package.json || true
      - export CI=false
      - export NODE_OPTIONS=--max_old_space_size=8196
      - export REACT_APP_UI_ENV=PROD
      - sudo -E bash -c "set \"CI=false\" &&  npm run build"
      - sudo rm -rf /home/ubuntu/build/
      - sudo cp -r build/ /home/ubuntu/build
      - forever stop erp-acad-frontend || true
      - forever start -v --uid "erp-acad-frontend" -a -l /var/log/frontend/forever.log -o /var/log/frontend/out.log -e /var/log/frontend/err.log $(which serve) -s /home/ubuntu/build -l 3000 
    tags:
      - erp-preprod-acad-fe
    only:
      - preprod-gcp


deploy_prod_gcp:
    before_script:
      - sleep 10
      - ip a
      - sudo chmod 777 -R /home/gitlab-runner/builds/
      - whoami
      - pwd
    variables:
      GIT_STRATEGY: clone
    stage: deploy
    script:
      - whoami
      - pwd
      - sudo systemctl restart nginx
      - echo "Deploy to production server"
      - sudo npm install
      - grep home package.json || true
      - export CI=false
      - export NODE_OPTIONS=--max_old_space_size=8196
      - export REACT_APP_UI_ENV=PROD
      - sudo -E bash -c "set \"CI=false\" &&  npm run build"
      - sudo chown -R gitlab-runner:gitlab-runner /home/gitlab-runner/builds/g-CCPJa-/
      - sudo rm -rf /home/ubuntu/build/
      - sudo cp -r build/ /home/ubuntu/build
      - forever stop erp-acad-frontend || true
      - forever start -v --uid "erp-acad-frontend" -a -l /var/log/frontend/forever.log -o /var/log/frontend/out.log -e /var/log/frontend/err.log $(which serve) -s /home/ubuntu/build -l 3000
      - sudo service uwsgi start
      - sudo gsutil rm -r gs://erp-configs/academic/mig-config/build
      - sudo gsutil rsync -r build/ gs://erp-configs/academic/mig-config/build
    environment:
      name: production
      url: 
    tags:
      - erp-acad-frontend-prod-b2b-gcp
    only:
      - master-gcp

stages:
  - deploy
  
deploy_UiVersion2:
    before_script:
      - sleep 10
      - ip a
      - sudo chmod 777 -R /home/gitlab-runner/builds/5szbP9sv
      - whoami
      - pwd
      - sudo chmod 777 -R /home/gitlab-runner/builds/5szbP9sv
      - npm cache clean --force
     # - sudo service uwsgi stop
    variables:
      GIT_STRATEGY: clone
    stage: deploy
    script:
      - whoami
      - pwd
      - sudo systemctl restart nginx
      - echo "Deploy to UiVersion2"
      - sudo npm install
      - grep home package.json || true
      - export CI=false
      - export NODE_OPTIONS=--max_old_space_size=8192
      - export REACT_APP_UI_ENV=DEV
      - sudo -E bash -c "set \"CI=false\" &&  npm run build"
      - sudo rm -rf /home/ubuntu/build_acadfaceliftui/
      - sudo cp -r build/ /home/ubuntu/build_acadfaceliftui/
      - forever stop acadfaceliftui || true
      - forever start --uid "acadfaceliftui" -a -l forever.log -o out.log -e err.log $(which serve) -s /home/ubuntu/build_acadfaceliftui -l 3010 
    environment:
      name: acadfaceliftui
      url: 
    tags:
      - acadfaceliftui
    only:
      - dev-facelift
